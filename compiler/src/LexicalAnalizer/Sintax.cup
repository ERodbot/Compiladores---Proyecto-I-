package LexicalAnalizer;
import java_cup.runtime.*;

action code {:
    public void uno(){
        System.out.println("123");
    }
    public void dos(){
        System.out.println("456");
    }
:}

parser code {:
  LexerCup lex;

  @SuppressWarnings("deprecation")
  public void parser(LexerCup lex){
    this.lex=lex;
    this.symbolFactory= new DefaultSymbolFactory();
  }
:}

init with {: :};

scan with {: return lex.next_token(); :};

// Terminals

// Data Types
terminal NOEL, NICOLAS, SANTA, COLACHO, CLAUS;

//Parenthesis
terminal ABRECUENTO, CIERRACUENTO, ABREEMPAQUE, CIERRAEMPAQUE, ABREREGALO, CIERRAREGALO;

//Separator
terminal CHIMENEA;

// Control Structures
terminal ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA;

//Literals numbers
terminal l_NICOLAS, l_NOEL;

//Literal strings
terminal STRING_LITERAL;

// Input/Output Functions
terminal NARRA, ESCUCHA;

// Class Types
terminal FESTIVAL, FIESTA, NAVIDAD;

// Relational Operators
terminal ALABASTRO, EVERGEEN, UPATREE, MINSTIX, MARY, OPENSLAE;

// Logical Operators
terminal GASPAR, MELCHOR, BALTASAR;

// Assignment
terminal ENTREGA;

// Boolean Literals
terminal l_t_CLAUS, l_f_CLAUS;

// Unary Operators
terminal GRINCH, QUIEN;

// Binary Arithmetic Operators
terminal RODOLFO, TRUENO, RELAMPAGO, JUGUETON, COMETA, CUPIDO;

// Identifier
terminal PERSONA;

// End of Line
terminal FINREGALO;

// Lexical Error
terminal ERROR;

// String Literal
terminal l_SANTA;

//no terminal 

non terminal        placeHolder;

start with placeHolder;

placeHolder ::= {:
                    uno();
                 :}
                 PERSONA
                 {:
                    dos();
                 :}
                 ;

